name: ci
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  linting:
    name: 'pre-commit hooks' # (includes Python formatting + linting)
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v2
        name: Checkout code
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Setup pre-commit
        run: make setup-git
      - name: Run pre-commit checks
        # Run pre-commit to lint and format check files that were changed (but not deleted) compared to master.
        # XXX: there is a very small chance that it'll expand to exceed Linux's limits
        #      `getconf ARG_MAX` - max # bytes of args + environ for exec()
        run: |
          pre-commit run --files $(git diff --diff-filter=d --name-only master)

  typing:
    name: 'mypy typing'
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v2
        name: Checkout code
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          make install-python-dependencies
      - name: Run mypy
        run: |
          mypy --config-file mypy.ini --ignore-missing-imports --strict --warn-unreachable snuba

  snuba-image:
    name: Build snuba CI image
    runs-on: ubuntu-latest
    timeout-minutes: 20
    outputs:
      branch: ${{ steps.branch.outputs.branch }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get branch name
        id: branch
        # strip `refs/heads/` from $GITHUB_REF and replace `/` with `-` so that
        # it can be used as a docker tag
        run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/} | tr / -)"

      # We are only using ghcr here for CI as `setup-gcloud` is a bit slow
      # Should revisit this when we move off of google cloud build (we may want to move these to GCR)
      - name: Registry login
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      # These are pulled in order to be able to use docker layer caching
      - name: Pull snuba CI images
        if: github.repository_owner != 'getsentry'
        run: |
          docker pull ghcr.io/getsentry/snuba-ci:${{ github.sha }} || \
            docker pull ghcr.io/getsentry/snuba-ci:${{ steps.branch.outputs.branch }} || \
            docker pull ghcr.io/getsentry/snuba-ci:latest || true

      - name: Build snuba docker image for CI
        if: github.repository_owner != 'getsentry'
        run: |
          docker build . \
            -t ghcr.io/getsentry/snuba-ci:latest \
            -t ghcr.io/getsentry/snuba-ci:${{ github.sha }} \
            -t ghcr.io/getsentry/snuba-ci:${{ steps.branch.outputs.branch }} \
            --cache-from ghcr.io/getsentry/snuba-ci:latest \
            --cache-from ghcr.io/getsentry/snuba-ci:${{ steps.branch.outputs.branch }} \
            --cache-from ghcr.io/getsentry/snuba-ci:${{ github.sha }} \
            --target testing

      - name: Publish images for cache
        if: github.repository_owner != 'getsentry'
        run: |
          docker push ghcr.io/getsentry/snuba-ci:${{ steps.branch.outputs.branch }}
          docker push ghcr.io/getsentry/snuba-ci:${{ github.sha }}
          docker push ghcr.io/getsentry/snuba-ci:latest

  tests:
    needs: [linting, snuba-image]
    name: Tests and code coverage
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        snuba_settings: ['test', 'test_distributed']
    steps:
      - uses: actions/checkout@v2
        name: Checkout code

      - name: Pull snuba CI images
        run: |
          docker pull ghcr.io/getsentry/snuba-ci:${{ github.sha }} || \
            docker pull ghcr.io/getsentry/snuba-ci:${{ needs.snuba-image.outputs.branch }} || \
            docker pull ghcr.io/getsentry/snuba-ci:latest || true

      - name: Build snuba docker image for CI
        run: |
          docker build . \
            -t snuba-test \
            --cache-from ghcr.io/getsentry/snuba-ci:${{ github.sha }} \
            --cache-from ghcr.io/getsentry/snuba-ci:${{ needs.snuba-image.outputs.branch }} \
            --cache-from ghcr.io/getsentry/snuba-ci:latest \
            --target testing

      - name: Docker set up
        run: |
          docker network create --attachable cloudbuild

      - name: Docker Snuba tests
        run: |
          SNUBA_IMAGE=snuba-test SNUBA_SETTINGS=${{ matrix.snuba_settings }} docker-compose -f docker-compose.gcb.yml run --rm snuba-test

      - name: Upload to codecov
        run: |
          bash <(curl -s https://codecov.io/bash)

  sentry:
    needs: [snuba-image]
    runs-on: ubuntu-latest
    timeout-minutes: 20

    strategy:
      matrix:
        instance: [0, 1]

    steps:
      # Checkout codebase
      - name: Checkout snuba
        uses: actions/checkout@v2

      - name: Pull snuba CI images
        run: |
          docker pull ghcr.io/getsentry/snuba-ci:${{ github.sha }} || \
            docker pull ghcr.io/getsentry/snuba-ci:${{ needs.snuba-image.outputs.branch }} || \
            docker pull ghcr.io/getsentry/snuba-ci:latest || true

      - name: Build snuba docker image for CI
        run: |
          docker build . \
            -t snuba-test \
            --cache-from ghcr.io/getsentry/snuba-ci:latest \
            --cache-from ghcr.io/getsentry/snuba-ci:${{ needs.snuba-image.outputs.branch }} \
            --cache-from ghcr.io/getsentry/snuba-ci:${{ github.sha }} \
            --target testing

      # Checkout Sentry and run integration tests against latest snuba
      # Make sure this is after `docker build`, otherwise we'll break docker cache
      - name: Checkout sentry
        uses: actions/checkout@v2
        with:
          repository: getsentry/sentry
          path: sentry

      - name: Setup steps
        id: setup
        run: |
          pip install --upgrade pip wheel
          # We cannot execute actions that are not placed under .github of the main repo
          mkdir -p .github/actions
          cp -r sentry/.github/actions/* .github/actions

      - name: Setup Sentry
        id: setup-sentry
        uses: ./.github/actions/setup-sentry
        with:
          workdir: sentry
          cache-files-hash: ${{ hashFiles('sentry/requirements**.txt') }}
          python-version: 3.8
          snuba: false
          kafka: true
          clickhouse: true

      - name: Start snuba
        run: |
          docker run -d --rm \
            -p 127.0.0.1:1218:1218 \
            -e PYTHONUNBUFFERED=1 \
            -e SNUBA_SETTINGS=docker \
            -e DEBUG=1 \
            -e DEFAULT_BROKERS=sentry_kafka:9092 \
            -e CLICKHOUSE_HOST=sentry_clickhouse \
            -e CLICKHOUSE_PORT=9000 \
            -e CLICKHOUSE_HTTP_PORT=8123 \
            -e REDIS_HOST=sentry_redis \
            -e REDIS_PORT=6379 \
            -e REDIS_DB=1 \
            --name sentry_snuba \
            --network sentry \
            snuba-test
          docker exec sentry_snuba snuba migrations migrate --force


      - name: Run snuba tests
        working-directory: sentry
        run: |
          make test-snuba
