name: ci
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  snuba-image:
    name: Build snuba CI image
    runs-on: ubuntu-latest
    timeout-minutes: 20
    outputs:
      branch: ${{ steps.branch.outputs.branch }}
      image_tag: ${{ steps.publish.outputs.image_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get branch name
        id: branch
        # strip `refs/heads/` from $GITHUB_REF and replace `/` with `-` so that
        # it can be used as a docker tag
        run: echo "branch=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> "$GITHUB_OUTPUT"

      # We are only using ghcr here for CI as `setup-gcloud` is a bit slow
      # Should revisit this when we move off of google cloud build (we may want to move these to GCR)
      - name: Registry login
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - run: docker buildx create --driver docker-container --use

      - name: Build snuba docker image for CI
        run: |
          set -euxo pipefail

          args=()

          if [ ${{ github.event_name }} = 'push' ]; then
            args+=(
              --tag ghcr.io/getsentry/snuba-ci:latest
              --cache-to type=registry,ref=ghcr.io/getsentry/snuba-ci:latest,mode=max
              --push
            )
          fi

          if [ ${{ github.event.pull_request.head.repo.full_name }} = ${{ github.repository }} ]; then
            args+=(
              --cache-to type=registry,ref=ghcr.io/getsentry/snuba-ci:${{ steps.branch.outputs.branch }},mode=max
            )
          fi

          docker buildx build \
            --pull \
            --cache-from type=registry,ref=ghcr.io/getsentry/snuba-ci:${{ github.event.pull_request.head.sha || github.sha }} \
            --cache-from type=registry,ref=ghcr.io/getsentry/snuba-ci:${{ steps.branch.outputs.branch }} \
            --cache-from type=registry,ref=ghcr.io/getsentry/snuba-ci:latest \
            --tag ghcr.io/getsentry/snuba-ci:${{ github.event.pull_request.head.sha || github.sha }} \
            --tag ghcr.io/getsentry/snuba-ci:${{ steps.branch.outputs.branch }} \
            --target testing \
            "${args[@]}" \
            -o type=docker,dest=/tmp/snuba-ci.tar \
            .

      - name: Publish snuba-ci image to artifacts
      # we publish to github artifacts separately so that third-party
      # contributions also work, as all the test jobs need this image.
      # otherwise third-party contributors would have to provide a working,
      # authenticated GHCR, which seems impossible to ensure in the general
      # case.
        uses: actions/upload-artifact@v4
        with:
          name: snuba-ci
          path: /tmp/snuba-ci.tar

  sentry:
    needs: [snuba-image]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        instance: [0]
    env:
      MIGRATIONS_TEST_MIGRATE: 1
      # XXX: `MATRIX_INSTANCE_TOTAL` must be hardcoded to the length of `strategy.matrix.instance`.
      MATRIX_INSTANCE_TOTAL: 4
      TEST_GROUP_STRATEGY: ROUND_ROBIN

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download snuba-ci image from artifacts
        uses: actions/download-artifact@v4
        with:
          name: snuba-ci
          path: /tmp

      - name: Load snuba-ci image
        run: |
          docker load --input /tmp/snuba-ci.tar
          docker image ls -a

      - name: Checkout sentry
        uses: actions/checkout@v4
        with:
          repository: getsentry/sentry
          path: sentry

      - name: Setup steps
        id: setup
        run: |
          # We cannot execute actions that are not placed under .github of the main repo
          mkdir -p .github/actions
          cp -r sentry/.github/actions/* .github/actions

      - name: Setup Sentry
        id: setup-sentry
        uses: ./.github/actions/setup-sentry
        with:
          workdir: sentry
          mode: minimal

      - name: Start snuba
        run: |
          # TODO(hubertdeng123): New devservices doesn't support running sentry without snuba yet, remove this when it does
          docker stop snuba-snuba-1
          docker rm snuba-snuba-1
          docker run -d --rm \
            -p 127.0.0.1:1218:1218 \
            -e PYTHONUNBUFFERED=1 \
            -e SNUBA_SETTINGS=docker \
            -e DEBUG=1 \
            -e DEFAULT_BROKERS=kafka:9093 \
            -e CLICKHOUSE_HOST=clickhouse \
            -e CLICKHOUSE_PORT=9000 \
            -e CLICKHOUSE_HTTP_PORT=8123 \
            -e REDIS_HOST=redis \
            -e REDIS_PORT=6379 \
            -e REDIS_DB=1 \
            --name snuba-snuba-1 \
            --network devservices \
            ghcr.io/getsentry/snuba-ci:${{ github.event.pull_request.head.sha || github.sha }}
          docker exec snuba-snuba-1 snuba migrations migrate --force

      - name: Run snuba tests
        working-directory: sentry
        run: |
          echo $PWD
          ls -lah
          ls -lah ..
          pytest -k 'not __In' tests \
            -m snuba_ci \
            -vv --cov . --cov-report="xml:.artifacts/snuba.coverage.xml"

      - name: Run full tests
        # TODO: Adjust which changed files we care about
        working-directory: sentry
        run: |
          pytest -k 'not __In' \
              tests/snuba \
              tests/sentry/snuba \
              tests/sentry/eventstream/kafka \
              tests/sentry/post_process_forwarder \
              tests/sentry/eventstore/snuba \
              tests/sentry/search/events \
              tests/sentry/event_manager \
              tests/sentry/api/endpoints/test_organization_profiling_functions.py \
              tests/sentry/integrations/slack/test_unfurl.py \
              tests/sentry/uptime/endpoints/test_project_uptime_alert_check_index.py \
              tests/sentry/uptime/endpoints/test_organization_uptime_stats.py \
              tests/sentry/api/endpoints/test_organization_traces.py \
              tests/sentry/api/endpoints/test_organization_spans_fields.py \
              tests/sentry/api/endpoints/test_organization_spans_fields_stats.py \
              tests/sentry/sentry_metrics/querying \
              -vv --cov . --cov-report="xml:.artifacts/snuba.coverage.xml"

      - name: Run CI module tests
        working-directory: sentry
        run: pytest -k 'not __In' tests -vv -m snuba_ci
