name: ci
on:
  push:
    branches:
      - master
    paths:
      - "rust_snuba/**"
  pull_request:
    paths:
      - "rust_snuba/**"

jobs:
  rust-linting:
    name: "Linting - Rust"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
        name: Checkout code
      - name: Run linter
        run: |
          make lint-rust

  snuba-image:
    name: Build snuba CI image
    runs-on: ubuntu-latest
    timeout-minutes: 20
    outputs:
      branch: ${{ steps.branch.outputs.branch }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get branch name
        id: branch
        # strip `refs/heads/` from $GITHUB_REF and replace `/` with `-` so that
        # it can be used as a docker tag
        run: echo "branch=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> "$GITHUB_OUTPUT"

      # We are only using ghcr here for CI as `setup-gcloud` is a bit slow
      # Should revisit this when we move off of google cloud build (we may want to move these to GCR)
      - name: Registry login
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      # These are pulled in order to be able to use docker layer caching
      - name: Pull snuba CI images
        if: github.repository_owner == 'getsentry'
        run: |
          docker pull ghcr.io/getsentry/snuba-ci:${{ github.sha }} || \
            docker pull ghcr.io/getsentry/snuba-ci:${{ steps.branch.outputs.branch }} || \
            docker pull ghcr.io/getsentry/snuba-ci:latest || true

      - name: Build snuba docker image for CI
        if: github.repository_owner == 'getsentry'
        run: |
          docker build . \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --build-arg SHOULD_BUILD_RUST=false \
            -t ghcr.io/getsentry/snuba-ci:latest \
            -t ghcr.io/getsentry/snuba-ci:${{ github.sha }} \
            -t ghcr.io/getsentry/snuba-ci:${{ steps.branch.outputs.branch }} \
            --cache-from ghcr.io/getsentry/snuba-ci:latest \
            --cache-from ghcr.io/getsentry/snuba-ci:${{ steps.branch.outputs.branch }} \
            --cache-from ghcr.io/getsentry/snuba-ci:${{ github.sha }} \
            --target testing

      - name: Publish images for cache
        if: steps.branch.outputs.branch == 'master' || github.event.pull_request.head.repo.full_name == github.repository
        # outside contributors won't be able to push to the docker registry
        # ignore the failures in this step
        continue-on-error: ${{ github.event_name == 'pull_request' }}
        run: |
          # Useful to speed up CI
          docker push ghcr.io/getsentry/snuba-ci:${{ steps.branch.outputs.branch }}
          docker push ghcr.io/getsentry/snuba-ci:${{ github.sha }}
          if [ "${{ steps.branch.outputs.branch }}" == 'master' ]; then
            # The latest tag should only be published on `master`
            docker push ghcr.io/getsentry/snuba-ci:latest
          fi

  rust-tests:
    needs: [rust-linting, snuba-image]
    name: "Tests - Rust"
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v3
        name: Checkout code
      - name: Registry login
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin
      - name: Run Zookeeper and Kafka
        run: |
          docker run \
            --name sentry_zookeeper \
            -d --network host \
            -e ZOOKEEPER_CLIENT_PORT=2181 \
            confluentinc/cp-zookeeper:6.2.0
          docker run \
            --name sentry_kafka \
            -d --network host \
            -e KAFKA_ZOOKEEPER_CONNECT=127.0.0.1:2181 \
            -e KAFKA_LISTENERS=INTERNAL://0.0.0.0:9093,EXTERNAL://0.0.0.0:9092 \
            -e KAFKA_ADVERTISED_LISTENERS=INTERNAL://127.0.0.1:9093,EXTERNAL://127.0.0.1:9092 \
            -e KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT \
            -e KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL \
            -e KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1 \
            confluentinc/cp-kafka:6.2.0

      - name: Build snuba docker image for CI
        run: |
          docker build . \
            -t snuba-test \
            --build-arg SHOULD_BUILD_RUST=false \
            --cache-from ghcr.io/getsentry/snuba-ci:${{ github.sha }} \
            --cache-from ghcr.io/getsentry/snuba-ci:${{ needs.snuba-image.outputs.branch }} \
            --cache-from ghcr.io/getsentry/snuba-ci:latest \
            --target testing

      - name: Docker set up
        run: |
          docker network create --attachable cloudbuild

      - name: Run tests
        run: |
          make test-rust
