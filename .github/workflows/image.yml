on:
  pull_request:
  push:
    branches:
      - master
      - release/**

jobs:
  build-multiplatform:
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            platform: amd64
          - os: ubuntu-24.04-arm
            platform: arm64
    runs-on: ${{ matrix.os }}
    name: build-${{ matrix.platform }}
    permissions:
      contents: read
      packages: write
    if: github.repository_owner == 'getsentry'
    steps:
    - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.2.2

    - uses: getsentry/action-build-and-push-images@a53f146fc1ea3cb404f2dcf7378f5b60dd98d3ca
      with:
        image_name: 'snuba'
        platforms: linux/${{ matrix.platform }}
        dockerfile_path: 'Dockerfile'
        tag_suffix: -${{ matrix.platform }}
        ghcr: true
        tag_nightly: false
        tag_latest: false

  build-production:
    runs-on: ubuntu-24.04
    name: Build and push production image
    permissions:
      contents: read
      id-token: write
    if: ${{ github.ref_name == 'master' }}
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.2.2
      - uses: getsentry/action-build-and-push-images@a53f146fc1ea3cb404f2dcf7378f5b60dd98d3ca
        with:
          image_name: 'snuba'
          platforms: linux/amd64
          dockerfile_path: './Dockerfile'
          ghcr: false
          tag_nightly: false
          tag_latest: false
          google_ar: true
          google_ar_image_name: us-central1-docker.pkg.dev/sentryio/snuba/image
          google_workload_identity_provider: projects/868781662168/locations/global/workloadIdentityPools/prod-github/providers/github-oidc-pool
          google_service_account: gha-gcr-push@sac-prod-sa.iam.gserviceaccount.com

  assemble:
    needs: [build-multiplatform]
    if: ${{ (github.ref_name == 'master' || startsWith(github.ref_name, 'releases/')) && github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Docker Login
        run: docker login --username '${{ github.actor }}' --password-stdin ghcr.io <<< "$GHCR_TOKEN"
        env:
          GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Create multiplatform manifests
        run: |
          docker buildx imagetools create \
            --tag ghcr.io/getsentry/snuba:${{ github.sha }} \
            --tag ghcr.io/getsentry/snuba:nightly \
            --tag ghcr.io/getsentry/snuba:latest \
            ghcr.io/getsentry/snuba:${{ github.sha }}-amd64 \
            ghcr.io/getsentry/snuba:${{ github.sha }}-arm64

  self-hosted-end-to-end:
    needs: [build-multiplatform, assemble]
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Run Sentry self-hosted e2e CI
        uses: getsentry/self-hosted@master
        with:
          project_name: snuba
          image_url: ghcr.io/getsentry/snuba:${{ github.sha }}
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
