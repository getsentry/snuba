format_version: 10
pipelines:
  deploy-snuba-monitor:
    display_order: 2
    environment_variables:
      GITHUB_TOKEN: '{{SECRET:[devinfra-github][token]}}'
      GOCD_ACCESS_TOKEN: '{{SECRET:[devinfra][gocd_access_token]}}'
      SENTRY_REGION: monitor
    group: snuba
    lock_behavior: unlockWhenFinished
    materials:
      deploy-snuba-pipeline-complete:
        pipeline: deploy-snuba
        stage: pipeline-complete
      snuba_repo:
        branch: master
        destination: snuba
        git: git@github.com:getsentry/snuba.git
        shallow_clone: false
    stages:
      - checks:
          jobs:
            checks:
              elastic_profile_id: snuba
              tasks:
                - script: |
                    ##!/bin/bash

                    /devinfra/scripts/checks/githubactions/checkruns.py \
                      getsentry/snuba \
                      ${GO_REVISION_SNUBA_REPO} \
                      "Tests and code coverage (test)" \
                      "Tests and code coverage (test_distributed)" \
                      "Tests and code coverage (test_distributed_migrations)" \
                      "Dataset Config Validation" \
                      "sentry (0)" \
                      "sentry (1)" \
                      "self-hosted-end-to-end"
                - script: |
                    ##!/bin/bash

                    /devinfra/scripts/checks/googlecloud/checkcloudbuild.py \
                      ${GO_REVISION_SNUBA_REPO} \
                      sentryio \
                      "us.gcr.io/sentryio/snuba"
                - script: |
                    ##!/bin/bash

                    deploy_sha=`snuba/scripts/fetch_service_refs.py --pipeline "deploy-snuba"`
                    snuba/scripts/check-migrations.py --to $deploy_sha --workdir snuba
              timeout: 1800
      - deploy-primary:
          fetch_materials: true
          jobs:
            create-sentry-release:
              elastic_profile_id: snuba
              environment_variables:
                SENTRY_AUTH_TOKEN: '{{SECRET:[devinfra-sentryio][token]}}'
                SENTRY_ORG: sentry
                SENTRY_PROJECT: snuba
              tasks:
                - script: |
                    ##!/bin/bash

                    sentry-cli releases deploys "${GO_REVISION_SNUBA_REPO}" new -e production
                    sentry-cli releases finalize "${GO_REVISION_SNUBA_REPO}"
              timeout: 300
            deploy-primary:
              elastic_profile_id: snuba
              environment_variables:
                LABEL_SELECTOR: service=snuba
              tasks:
                - script: |
                    ##!/bin/bash

                    eval $(/devinfra/scripts/regions/project_env_vars.py --region="${SENTRY_REGION}")

                    /devinfra/scripts/k8s/k8stunnel

                    /devinfra/scripts/k8s/k8s-deploy.py \
                      --context="gke_${GCP_PROJECT}_${GKE_REGION}-${GKE_CLUSTER_ZONE}_${GKE_CLUSTER}" \
                      --label-selector="service=snuba" \
                      --image="us.gcr.io/sentryio/snuba:${GO_REVISION_SNUBA_REPO}" \
                      --container-name="snuba"

                    /devinfra/scripts/k8s/k8s-deploy.py \
                      --label-selector="service=snuba" \
                      --image="us.gcr.io/sentryio/snuba:${GO_REVISION_SNUBA_REPO}" \
                      --type="cronjob" \
                      --container-name="cleanup"
              timeout: 1200
      - migrate:
          fetch_materials: true
          jobs:
            migrate:
              elastic_profile_id: snuba
              environment_variables:
                SNUBA_SERVICE_NAME: snuba
              tasks:
                - script: |
                    ##!/bin/bash

                    ## At the time of writing (2023-06-28) the single tenant deployments
                    ## have been using a different migration process compared to the
                    ## US deployment of snuba.
                    ## This script should be merged with migrate.sh if we can figure
                    ## out a common migration script for all regions.

                    eval $(/devinfra/scripts/regions/project_env_vars.py --region="${SENTRY_REGION}")
                    /devinfra/scripts/k8s/k8stunnel

                    /devinfra/scripts/k8s/k8s-spawn-job.py \
                      --label-selector="service=${SNUBA_SERVICE_NAME}" \
                      --container-name="${SNUBA_SERVICE_NAME}" \
                      "snuba-bootstrap" \
                      "us.gcr.io/sentryio/snuba:${GO_REVISION_SNUBA_REPO}" \
                      -- \
                      snuba bootstrap --force --no-migrate

                    /devinfra/scripts/k8s/k8s-spawn-job.py \
                      --label-selector="service=${SNUBA_SERVICE_NAME}" \
                      --container-name="${SNUBA_SERVICE_NAME}" \
                      "snuba-migrate" \
                      "us.gcr.io/sentryio/snuba:${GO_REVISION_SNUBA_REPO}" \
                      -- \
                      snuba migrations migrate --force
                - plugin:
                    configuration:
                      id: script-executor
                      version: 1
                    options:
                      script: |
                        ##!/bin/bash

                        eval $(/devinfra/scripts/regions/project_env_vars.py --region="${SENTRY_REGION}")
                        /devinfra/scripts/k8s/k8stunnel

                        /devinfra/scripts/k8s/k8s-spawn-job.py \
                          --label-selector="service=${SNUBA_SERVICE_NAME}" \
                          --container-name="${SNUBA_SERVICE_NAME}" \
                          "snuba-migrate-reverse" \
                          "us.gcr.io/sentryio/snuba:${GO_REVISION_SNUBA_REPO}" \
                          -- \
                          snuba migrations reverse-in-progress
                    run_if: failed
              timeout: 1200
      - pipeline-complete:
          approval:
            allow_only_on_success: true
            type: success
          jobs:
            pipeline-complete:
              tasks:
                - exec:
                    command: true
