version: v1
kind: entity
name: generic_metrics_counters

schema:
  [
    { name: org_id, type: UInt, args: { size: 64 } },
    { name: project_id, type: UInt, args: { size: 64 } },
    { name: metric_id, type: UInt, args: { size: 64 } },
    { name: timestamp, type: DateTime },
    { name: bucketed_time, type: DateTime },
    { name: granularity, type: UInt, args: { size: 8 } },
    { name: use_case_id, type: String },
    {
      name: tags,
      type: Nested,
      args:
        {
          subcolumns:
            [
              { name: key, type: UInt, args: { size: 64 } },
              { name: value, type: UInt, args: { size: 64 } },
            ],
        },
    },
    {
      name: tags.raw_value,
      type: Array,
      args: { schema_modifiers: [readonly], inner_type: { type: String } },
    },
    {
      name: value,
      type: AggregateFunction,
      args: { func: sum, arg_types: [{ type: Float, args: { size: 64 } }] },
    },
    {
      name: value_weighted,
      type: AggregateFunction,
      args: { func: sum, arg_types: [{ type: Float, args: { size: 64 } }] },
    },
  ]

storages:
  - storage: generic_metrics_counters
    translation_mappers:
      functions:
        - mapper: FunctionNameMapper
          args:
            from_name: sum
            to_name: sumMerge
        - mapper: FunctionNameMapper
          args:
            from_name: sumIf
            to_name: sumMergeIf
        - mapper: AggregateFunctionMapper
          args:
            column_to_map: value
            from_name: sum_weighted
            to_name: sumMerge
            aggr_col_name: value_weighted
      subscriptables:
        - mapper: SubscriptableMapper
          args:
            from_column_table:
            from_column_name: tags_raw
            to_nested_col_table:
            to_nested_col_name: tags
            value_subcolumn_name: raw_value
        - mapper: SubscriptableMapper
          args:
            from_column_table:
            from_column_name: tags
            to_nested_col_table:
            to_nested_col_name: tags
            value_subcolumn_name: indexed_value
  - storage: generic_metrics_counters_raw
    is_writable: true
    translation_mappers:
      functions:
        - mapper: FunctionNameMapper
          args:
            from_name: sum
            to_name: sumMerge
        - mapper: FunctionNameMapper
          args:
            from_name: sumIf
            to_name: sumMergeIf
      subscriptables:
        - mapper: SubscriptableMapper
          args:
            from_column_table:
            from_column_name: tags_raw
            to_nested_col_table:
            to_nested_col_name: tags
            value_subcolumn_name: raw_value
        - mapper: SubscriptableMapper
          args:
            from_column_table:
            from_column_name: tags
            to_nested_col_table:
            to_nested_col_name: tags
            value_subcolumn_name: indexed_value

storage_selector:
  selector: SimpleQueryStorageSelector
  args:
    storage: generic_metrics_counters

query_processors:
  - processor: TagsTypeTransformer
  - processor: MappedGranularityProcessor
    args:
      accepted_granularities:
        10: 0
        60: 1
        3600: 2
        86400: 3
      default_granularity: 1
  - processor: TimeSeriesProcessor
    args:
      time_group_columns:
        bucketed_time: timestamp
      time_parse_columns: [timestamp]

validators:
  - validator: EntityRequiredColumnValidator
    args:
      required_filter_columns: ["org_id", "project_id"]
required_time_column: timestamp
partition_key_column_name: org_id
subscription_processors:
  - processor: AddColumnCondition
    args:
      extra_condition_data_key: organization
      extra_condition_column: org_id
subscription_validators:
  - validator: AggregationValidator
    args:
      max_allowed_aggregations: 3
      disallowed_aggregations: [having, orderby]
      required_time_column: timestamp
