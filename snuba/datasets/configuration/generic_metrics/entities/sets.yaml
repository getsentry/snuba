version: v1
kind: entity
name: generic-metrics-sets

schema:
  [
    { name: org_id, type: UInt, args: { size: 64 } },
    { name: use_case_id, type: String },
    { name: project_id, type: UInt, args: { size: 64 } },
    { name: metric_id, type: UInt, args: { size: 64 } },
    { name: timestamp, type: DateTime },
    { name: retention_days, type: UInt, args: { size: 16 } },
    {
      name: tags,
      type: Nested,
      args:
        {
          subcolumns:
            [
              { name: key, type: UInt, args: { size: 64 } },
              { name: indexed_value, type: UInt, args: { size: 64 } },
              { name: raw_value, type: String },
            ],
        },
    },

    {
      name: _raw_tags_hash,
      type: Array,
      args: { type: UInt, arg: 64, schema_modifiers: [readonly] },
    },
    {
      name: _indexed_tags_hash,
      type: Array,
      args: { type: UInt, arg: 64, schema_modifiers: [readonly] },
    },
    { name: granularity, type: UInt, args: { size: 8 } },

    {
      name: value,
      type: AggregateFunction,
      args: { func: "uniqCombined64", arg_types: [{ type: UInt, arg: 64 }] },
    },
  ]

readable_storage: generic_metrics_sets
writable_storage: generic_metrics_sets_raw
query_processors:
  -
    processor: transform_tag_types
  -
    processor: handle_mapped_granularities
    args:
      accepted_granularities:
        60: 1
        3600: 2
        86400: 3
      default_granularity: 1
  -
    processor: translate_time_series
    args:
      time_group_columns:
        bucketed_time: timestamp
      time_parse_columns: [timestamp]
  -
    processor: referrer_rate_limit
  -
    processor: org_rate_limiter_processor
    args:
      org_column: org_id
  -
    processor: project_referrer_rate_limiter
    args:
      project_column: project_id
  -
    processor: project_rate_limiter
    args:
      project_column: project_id
  -
    processor: resource_quota_limiter
    args:
      project_field: project_id
translation_mappers:
  functions:
    -
      mapper: simple_func
      args:
        from_name: uniq
        to_name: uniqCombined64Merge
    -
      mapper: simple_func
      args:
        from_name: uniqIf
        to_name: uniqCombined64MergeIf
  subscriptables:
    -
      mapper: subscriptable
      args:
        from_column_table:
        from_column_name: tags_raw
        to_nested_col_table:
        to_nested_col_name: tags
        value_subcolumn_name: raw_value
    -
      mapper: subscriptable
      args:
        from_column_table:
        from_column_name: tags
        to_nested_col_table:
        to_nested_col_name: tags
        value_subcolumn_name: indexed_value
validators:
  -
    validator: entity_required
    args:
      required_filter_columns: ["org_id", "project_id"]
