version: v1
kind: readable_storage
name: org_sessions
storage:
  key: org_sessions
  set_key: sessions
schema:
  columns:
    [
      { name: org_id, type: UInt, args: { size: 64 } },
      { name: project_id, type: UInt, args: { size: 64 } },
      { name: started, type: DateTime },
      { name: release, type: String },
      { name: environment, type: String },
      { name: user_agent, type: String },
      { name: os, type: String },
      {
        name: duration_quantiles,
        type: AggregateFunction,
        args:
          {
            func: "quantilesIf(0.5, 0.9)",
            arg_types:
              [
                { type: UInt, args: { size: 32 } },
                { type: UInt, args: { size: 8 } },
              ],
          },
      },
      {
        name: duration_avg,
        type: AggregateFunction,
        args:
          {
            func: avgIf,
            arg_types:
              [
                { type: UInt, args: { size: 32 } },
                { type: UInt, args: { size: 8 } },
              ],
          },
      },
      {
        name: sessions,
        type: AggregateFunction,
        args:
          {
            func: countIf,
            arg_types: [{ type: UUID }, { type: UInt, args: { size: 8 } }],
          },
      },
      {
        name: sessions_preaggr,
        type: AggregateFunction,
        args:
          {
            func: sumIf,
            arg_types:
              [
                { type: UInt, args: { size: 32 } },
                { type: UInt, args: { size: 8 } },
              ],
          },
      },
      {
        name: sessions_crashed,
        type: AggregateFunction,
        args:
          {
            func: countIf,
            arg_types: [{ type: UUID }, { type: UInt, args: { size: 8 } }],
          },
      },
      {
        name: sessions_crashed_preaggr,
        type: AggregateFunction,
        args:
          {
            func: sumIf,
            arg_types:
              [
                { type: UInt, args: { size: 32 } },
                { type: UInt, args: { size: 8 } },
              ],
          },
      },
      {
        name: sessions_abnormal,
        type: AggregateFunction,
        args:
          {
            func: countIf,
            arg_types: [{ type: UUID }, { type: UInt, args: { size: 8 } }],
          },
      },
      {
        name: sessions_abnormal_preaggr,
        type: AggregateFunction,
        args:
          {
            func: sumIf,
            arg_types:
              [
                { type: UInt, args: { size: 32 } },
                { type: UInt, args: { size: 8 } },
              ],
          },
      },
      {
        name: sessions_errored,
        type: AggregateFunction,
        args:
          {
            func: uniqIf,
            arg_types: [{ type: UUID }, { type: UInt, args: { size: 8 } }],
          },
      },
      {
        name: sessions_errored_preaggr,
        type: AggregateFunction,
        args:
          {
            func: sumIf,
            arg_types:
              [
                { type: UInt, args: { size: 32 } },
                { type: UInt, args: { size: 8 } },
              ],
          },
      },
      {
        name: users,
        type: AggregateFunction,
        args:
          {
            func: uniqIf,
            arg_types: [{ type: UUID }, { type: UInt, args: { size: 8 } }],
          },
      },
      {
        name: users_crashed,
        type: AggregateFunction,
        args:
          {
            func: uniqIf,
            arg_types: [{ type: UUID }, { type: UInt, args: { size: 8 } }],
          },
      },
      {
        name: users_abnormal,
        type: AggregateFunction,
        args:
          {
            func: uniqIf,
            arg_types: [{ type: UUID }, { type: UInt, args: { size: 8 } }],
          },
      },
      {
        name: users_errored,
        type: AggregateFunction,
        args:
          {
            func: uniqIf,
            arg_types: [{ type: UUID }, { type: UInt, args: { size: 8 } }],
          },
      },
    ]
  local_table_name: sessions_hourly_local
  dist_table_name: sessions_hourly_dist
query_processors:
  - processor: PrewhereProcessor
    args:
      prewhere_candidates:
        - project_id
        - org_id
  - processor: TableRateLimit
