version: v1
kind: entity
name: search_issues

schema:
  [
    { name: organization_id, type: UInt, args: { size: 64 } },
    { name: project_id, type: UInt, args: { size: 64 } },
    { name: group_id, type: UInt, args: { size: 64 } },
    { name: search_title, type: String },
    { name: fingerprint, type: Array, args: { inner_type: { type: String } } },
    { name: occurrence_id, type: UUID },
    { name: occurrence_type_id, type: UInt, args: { size: 8 } },
    { name: detection_timestamp, type: DateTime },

    {
      name: tags,
      type: Nested,
      args:
        {
          subcolumns:
            [ { name: key, type: String }, { name: value, type: String } ],
        },
    },

    # TODO: fill out more fields
  ]

readable_storage: search_issues
writable_storage: search_issues
query_processors:
  - processor: OrganizationRateLimiterProcessor
    args:
      org_column: organization_id
  - processor: ReferrerRateLimiterProcessor
  - processor: ProjectReferrerRateLimiter
    args:
      project_column: project_id
  - processor: ProjectRateLimiterProcessor
    args:
      project_column: project_id
  - processor: ResourceQuotaProcessor
    args:
      project_field: project_id
  - processor: TagsExpanderProcessor

translation_mappers:
  subscriptables:
    - mapper: SubscriptableMapper
      args:
        from_column_table:
        from_column_name: tags
        to_nested_col_table:
        to_nested_col_name: tags

validators:
  - validator: EntityRequiredColumnValidator
    args:
      required_filter_columns: ["project_id"]

required_time_column: detection_timestamp
