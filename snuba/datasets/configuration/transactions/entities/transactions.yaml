version: v1
kind: entity
name: transactions

schema:
  [
    { name: project_id, type: UInt, args: { size: 64 } },
    { name: event_id, type: UUID },
    { name: trace_id, type: UUID, args: { schema_modifiers: [nullable] } },
    { name: span_id, type: UInt, args: { size: 64 } },
    { name: transaction_name, type: String },
    {
      name: transaction_hash,
      type: UInt,
      args: { size: 64, schema_modifiers: [readonly] },
    },
    { name: transaction_op, type: String },
    { name: transaction_status, type: UInt, args: { size: 8 } },
    { name: start_ts, type: DateTime },
    { name: start_ms, type: UInt, args: { size: 16 } },
    { name: finish_ts, type: DateTime },
    { name: finish_ms, type: UInt, args: { size: 16 } },
    { name: duration, type: UInt, args: { size: 32 } },
    { name: platform, type: String },
    { name: environment, type: String, args: { schema_modifiers: [nullable] } },
    { name: release, type: String, args: { schema_modifiers: [nullable] } },
    { name: dist, type: String, args: { schema_modifiers: [nullable] } },
    { name: ip_address_v4, type: IPv4, args: { schema_modifiers: [nullable] } },
    { name: ip_address_v6, type: IPv6, args: { schema_modifiers: [nullable] } },
    { name: user, type: String },
    {
      name: user_hash,
      type: UInt,
      args: { size: 64, schema_modifiers: [readonly] },
    },
    { name: user_id, type: String, args: { schema_modifiers: [nullable] } },
    { name: user_name, type: String, args: { schema_modifiers: [nullable] } },
    { name: user_email, type: String, args: { schema_modifiers: [nullable] } },
    { name: sdk_name, type: String },
    { name: sdk_version, type: String },
    { name: http_method, type: String, args: { schema_modifiers: [nullable] } },
    {
      name: http_referer,
      type: String,
      args: { schema_modifiers: [nullable] },
    },
    {
      name: tags,
      type: Nested,
      args:
        {
          subcolumns:
            [{ name: key, type: String }, { name: value, type: String }],
        },
    },
    {
      name: _tags_hash_map,
      type: Array,
      args:
        {
          inner_type: { type: UInt, args: { size: 64 } },
          schema_modifiers: [readonly],
        },
    },
    {
      name: contexts,
      type: Nested,
      args:
        {
          subcolumns:
            [{ name: key, type: String }, { name: value, type: String }],
        },
    },
    {
      name: measurements,
      type: Nested,
      args:
        {
          subcolumns:
            [
              { name: key, type: String },
              { name: value, type: Float, args: { size: 64 } },
            ],
        },
    },
    {
      name: span_op_breakdowns,
      type: Nested,
      args:
        {
          subcolumns:
            [
              { name: key, type: String },
              { name: value, type: Float, args: { size: 64 } },
            ],
        },
    },
    {
      name: spans,
      type: Nested,
      args:
        {
          subcolumns:
            [
              { name: op, type: String },
              { name: group, type: UInt, args: { size: 64 } },
              { name: exclusive_time, type: Float, args: { size: 64 } },
              { name: exclusive_time_32, type: Float, args: { size: 32 } },
            ],
        },
    },
    { name: partition, type: UInt, args: { size: 16 } },
    { name: offset, type: UInt, args: { size: 64 } },
    { name: message_timestamp, type: DateTime },
    { name: retention_days, type: UInt, args: { size: 16 } },
    { name: deleted, type: UInt, args: { size: 8 } },
    { name: type, type: String, args: { schema_modifiers: [readonly] } },
    { name: message, type: String, args: { schema_modifiers: [readonly] } },
    { name: title, type: String, args: { schema_modifiers: [readonly] } },
    { name: transaction_source, type: String },
    { name: timestamp, type: DateTime, args: { schema_modifiers: [readonly] } },
    {
      name: group_ids,
      type: Array,
      args: { inner_type: { type: UInt, args: { size: 64 } } },
    },
    { name: app_start_type, type: String },
  ]

readable_storage: transactions
writable_storage: transactions

query_processors:
  [
    {
      processor: TimeSeriesProcessor,
      args:
        {
          time_group_columns: { time: finish_ts },
          time_parse_columns: [start_ts, finish_ts, timestamp],
        },
    },
    { processor: TagsExpanderProcessor },
    { processor: BasicFunctionsProcessor },
    { processor: ApdexProcessor },
    { processor: FailureRateProcessor },
    { processor: ReferrerRateLimiterProcessor },
    {
      processor: ProjectReferrerRateLimiter,
      args: { project_column: project_id },
    },
    {
      processor: ProjectRateLimiterProcessor,
      args: { project_column: project_id },
    },
    { processor: ResourceQuotaProcessor, args: { project_field: project_id } },
  ]

translation_mappers:
  {
    columns:
      [
        {
          mapper: ColumnToIPAddress,
          args:
            {
              from_table_name,
              from_col_name: "ip_address",
              to_function_name: "coalesce",
            },
        },
        {
          mapper: ColumnToNullIf,
          args: { from_table_name, from_col_name: "user" },
        },
        {
          mapper: ColumnToLiteral,
          args:
            {
              from_table_name,
              from_col_name: "type",
              to_literal_value: "transaction",
            },
        },
        {
          mapper: ColumnToColumn,
          args:
            {
              from_table_name,
              from_col_name: "timestamp",
              to_table_name,
              to_col_name: "finish_ts",
            },
        },
        {
          mapper: ColumnToColumn,
          args:
            {
              from_table_name,
              from_col_name: "username",
              to_table_name,
              to_col_name: "user_name",
            },
        },
        {
          mapper: ColumnToColumn,
          args:
            {
              from_table_name,
              from_col_name: "email",
              to_table_name,
              to_col_name: "user_email",
            },
        },
        {
          mapper: ColumnToColumn,
          args:
            {
              from_table_name,
              from_col_name: "transaction",
              to_table_name,
              to_col_name: "transaction_name",
            },
        },
        {
          mapper: ColumnToColumn,
          args:
            {
              from_table_name,
              from_col_name: "message",
              to_table_name,
              to_col_name: "transaction_name",
            },
        },
        {
          mapper: ColumnToColumn,
          args:
            {
              from_table_name,
              from_col_name: "title",
              to_table_name,
              to_col_name: "transaction_name",
            },
        },
        {
          mapper: ColumnToColumn,
          args:
            {
              from_table_name,
              from_col_name: "spans.exclusive_time",
              to_table_name,
              to_col_name: "spans.exclusive_time_32",
            },
        },
        {
          mapper: ColumnToColumn,
          args:
            {
              from_table_name,
              from_col_name: "timestamp",
              to_table_name,
              to_col_name: "finish_ts",
            },
        },
        {
          mapper: ColumnToMapping,
          args:
            {
              from_table_name,
              from_col_name: "geo_country_code",
              to_nested_col_table_name,
              to_nested_col_name: "contexts",
              to_nested_mapping_key: "geo.country_code",
              nullable: True,
            },
        },
        {
          mapper: ColumnToMapping,
          args:
            {
              from_table_name,
              from_col_name: "geo_region",
              to_nested_col_table_name,
              to_nested_col_name: "contexts",
              to_nested_mapping_key: "geo.region",
              nullable: True,
            },
        },
        {
          mapper: ColumnToMapping,
          args:
            {
              from_table_name,
              from_col_name: "geo_city",
              to_nested_col_table_name,
              to_nested_col_name: "contexts",
              to_nested_mapping_key: "geo.city",
              nullable: True,
            },
        },
      ],
    subscriptables:
      [
        {
          mapper: SubscriptableMapper,
          args:
            {
              from_column_table,
              from_column_name: tags,
              to_nested_col_table,
              to_nested_col_name: tags,
            },
        },
        {
          mapper: SubscriptableMapper,
          args:
            {
              from_column_table,
              from_column_name: contexts,
              to_nested_col_table,
              to_nested_col_name: contexts,
            },
        },
        {
          mapper: SubscriptableMapper,
          args:
            {
              from_column_table,
              from_column_name: measurements,
              to_nested_col_table,
              to_nested_col_name: measurements,
              nullable: True,
            },
        },
        {
          mapper: SubscriptableMapper,
          args:
            {
              from_column_table,
              from_column_name: span_op_breakdowns,
              to_nested_col_table,
              to_nested_col_name: span_op_breakdowns,
              nullable: True,
            },
        },
      ],
  }

validators:
  [
    {
      validator: EntityRequiredColumnValidator,
      args: { required_filter_columns: [project_id] },
    },
  ]

required_time_column: finish_ts
subscription_validators:
  [
    {
      validator: AggregationValidator,
      args:
        {
          max_allowed_aggregations: 1,
          disallowed_aggregations: [groupby, having, orderby],
          required_time_column: finish_ts
        },
    },
  ]
