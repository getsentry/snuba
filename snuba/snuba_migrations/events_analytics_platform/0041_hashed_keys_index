from typing import Sequence

from snuba.clusters.storage_sets import StorageSetKey
from snuba.migrations import migration, operations

buckets = 40

def get_hashed_keys_index_expression() -> str:
    column_expressions = []
    for i in range(buckets):
        hashed_keys = f"arrayMap(k -> cityHash64(k), mapKeys(attributes_string_{i}))"
        column_expressions.append(hashed_keys)

    return f"arrayConcat({', '.join(column_expressions)})"





class Migration(migration.ClickhouseNodeMigration):

    blocking = False
    storage_set_key = StorageSetKey.EVENTS_ANALYTICS_PLATFORM
    granularity = "8192"

    local_table_name = "eap_items_1_local"

    def forwards_ops(self) -> Sequence[operations.SqlOperation]:
        return [
            operations.AddIndex(
                storage_set=self.storage_set_key,
                table_name=self.local_table_name,
                index_name="bf_hashed_keys_string",
                index_expression=get_hashed_keys_index_expression(),
                index_type="bloom_filter",
                granularity=1,
                target=operations.OperationTarget.LOCAL,
            ),
        ]

    def backwards_ops(self) -> Sequence[operations.SqlOperation]:
        return [
            operations.DropIndex(
                storage_set=self.storage_set_key,
                table_name=self.local_table_name,
                index_name="bf_hashed_keys_string",
            ),
        ]
