"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import snuba.protobufs.BaseRequest_pb2
import snuba.protobufs.Filters_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class AggregateBucketRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Function:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _FunctionEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[AggregateBucketRequest._Function.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        SUM: AggregateBucketRequest._Function.ValueType  # 0
        AVERAGE: AggregateBucketRequest._Function.ValueType  # 1
        COUNT: AggregateBucketRequest._Function.ValueType  # 2
        P50: AggregateBucketRequest._Function.ValueType  # 3
        P95: AggregateBucketRequest._Function.ValueType  # 4
        P99: AggregateBucketRequest._Function.ValueType  # 5
        AVG: AggregateBucketRequest._Function.ValueType  # 6

    class Function(_Function, metaclass=_FunctionEnumTypeWrapper): ...
    SUM: AggregateBucketRequest.Function.ValueType  # 0
    AVERAGE: AggregateBucketRequest.Function.ValueType  # 1
    COUNT: AggregateBucketRequest.Function.ValueType  # 2
    P50: AggregateBucketRequest.Function.ValueType  # 3
    P95: AggregateBucketRequest.Function.ValueType  # 4
    P99: AggregateBucketRequest.Function.ValueType  # 5
    AVG: AggregateBucketRequest.Function.ValueType  # 6

    REQUEST_INFO_FIELD_NUMBER: builtins.int
    AGGREGATE_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    GRANULARITY_SECS_FIELD_NUMBER: builtins.int
    aggregate: global___AggregateBucketRequest.Function.ValueType
    granularity_secs: builtins.int
    @property
    def request_info(self) -> snuba.protobufs.BaseRequest_pb2.RequestInfo: ...
    @property
    def filter(self) -> snuba.protobufs.Filters_pb2.TraceItemFilter: ...
    def __init__(
        self,
        *,
        request_info: snuba.protobufs.BaseRequest_pb2.RequestInfo | None = ...,
        aggregate: global___AggregateBucketRequest.Function.ValueType = ...,
        filter: snuba.protobufs.Filters_pb2.TraceItemFilter | None = ...,
        granularity_secs: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["filter", b"filter", "request_info", b"request_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["aggregate", b"aggregate", "filter", b"filter", "granularity_secs", b"granularity_secs", "request_info", b"request_info"]) -> None: ...

global___AggregateBucketRequest = AggregateBucketRequest

@typing.final
class AggregateBucketResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RESULT_FIELD_NUMBER: builtins.int
    @property
    def result(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    def __init__(
        self,
        *,
        result: collections.abc.Iterable[builtins.float] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["result", b"result"]) -> None: ...

global___AggregateBucketResponse = AggregateBucketResponse
